# FUNCTIONS

function zcompile-many() {
	local f
	for f; do zcompile -R -- "$f".zwc "$f"; done
}

# PLUGINS
if [[ ! -e ~/fzf-tab ]] then
	git clone --depth=1 https://github.com/Aloxaf/fzf-tab.git ~/fzf-tab
	zcompile-many ~/fzf-tab/fzf-tab.zsh
fi
if [[ ! -e ~/fast-syntax-highlighting ]]; then
	git clone --depth=1 https://github.com/zdharma-continuum/fast-syntax-highlighting.git ~/fast-syntax-highlighting
	mv -- ~/fast-syntax-highlighting/{'→chroma','tmp'}
	zcompile-many ~/fast-syntax-highlighting/{fast*,.fast*,**/*.ch,**/*.zsh}
	mv -- ~/fast-syntax-highlighting/{'tmp','→chroma'}
fi
if [[ ! -e ~/zsh-autosuggestions ]]; then
	git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions.git ~/zsh-autosuggestions
	zcompile-many ~/zsh-autosuggestions/{zsh-autosuggestions.zsh,src/**/*.zsh}
fi
if [[ ! -e ~/powerlevel10k ]]; then
	git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
	make -C ~/powerlevel10k pkg
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
	source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

autoload -Uz compinit && compinit
[[ ~/.zcompdump.zwc -nt ~/.zcompdump ]] || zcompile-many ~/.zcompdump
unfunction zcompile-many

# EXPORTS OPTs
export FZF_DEFAULT_COMMAND="fd --type f --strip-cwd-prefix --hidden"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND --type d"
export FZF_CTRL_T_OPTS="
	--preview 'bat -n --color=always {}'
	--bind 'ctrl-/:change-preview-window(down|hidden|)'"
 export FZF_CTRL_R_OPTS="
	--preview 'echo {}' --preview-window up:3:hidden:wrap
	--bind 'ctrl-/:toggle-preview'
	--bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
	--color header:italic
	--header 'Press CTRL-Y to copy command into clipboard'"
export FZF_ALT_C_OPTS="--preview 'tree -C {}'"
export EDITOR="nvim"
export VISUAL="micro"
export LC_ALL=pt_BR.UTF-8
export LANG=pt_BR.UTF-8
export YSU_MESSAGE_POSITION="after"
# EXPORTS DIRs
export DOTREPO="$HOME/dotfiles"
export DEV="$HOME/Dev"
export PATH="$HOME/.nodenv/bin:$PATH"
{%@@ if profile == "fedora" @@%}
export PATH="$HOME/.rbenv/bin:$PATH"
export PNPM_HOME="/home/adilson/.local/share/pnpm"
case ":$PATH:" in
	*":$PNPM_HOME:"*) ;;
	*) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
if [ -d "$HOME/bin" ] ; then
	export PATH="$HOME/bin:$PATH"
fi
{%@@ elif profile == "mac" @@%}
export PATH="/usr/local/sbin:$PATH"
{%@@ endif @@%}

# THEME
ZSH_THEME="powerlevel10k/powerlevel10k"

# POWERLEVEL THEME SETTINGS
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(ssh context dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator time)
POWERLEVEL9K_SHOW_RULER=true

# HISTORY OPTs
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE
export HISTFILE=~/.zsh_history
export HISTIGNORE="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd..:zh:exa"
export HISTSIZE=100000
export HISTTIMEFORMAT="[%F %T]"
export SAVEHIST=$HISTSIZE
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY

# ALIASES
if [ -f ~/.zsh_aliases ]; then
	. ~/.zsh_aliases
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

eval "$(nodenv init - --no-rehash)"
{%@@ if profile == "mac" @@%}

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Use fzf installed from Homebrew
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
{%@@ endif @@%}
source ~/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
source ~/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/powerlevel10k/powerlevel10k.zsh-theme
source ~/fzf-tab/fzf-tab.plugin.zsh
{%@@ if profile == "fedora" @@%}
source /usr/share/fzf/shell/key-bindings.zsh
# Fixes tilde escaping on terminal
# https://wiki.archlinux.org/title/Zsh#Key_bindings

typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi
{%@@ endif @@%}
